services:
  database:
    build: ./database
    container_name: ${PROJECT_NAME:-app}-database
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app_network
    restart: unless-stopped

  cache:
    build: ./cache
    container_name: ${PROJECT_NAME:-app}-cache
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-development}
    ports:
      - "${REDIS_PORT:-6380}:6379"
    networks:
      - app_network
    restart: unless-stopped

  api:
    build: ./api
    container_name: ${PROJECT_NAME:-app}-api
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - DB_HOST=database
      - DB_PORT=3306
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - REDIS_HOST=cache
      - REDIS_PORT=6379
      - PROJECT_NAME=${PROJECT_NAME:-app}
      - PROJECT_DOMAIN=${PROJECT_DOMAIN:-localhost}
    ports:
      - "${API_PORT:-444}:81"
    depends_on:
      - database
      - cache
    networks:
      - app_network
    restart: unless-stopped

  website:
    build: ./website
    container_name: ${PROJECT_NAME:-app}-website
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - WEBSITE_PORT=5000
      - PROJECT_NAME=${PROJECT_NAME:-app}
      - PROJECT_DOMAIN=${PROJECT_DOMAIN:-localhost}
    ports:
      - "${WEBSITE_PORT:-5000}:5000"
    networks:
      - app_network
    restart: unless-stopped

  proxy:
    build: ./proxy
    container_name: ${PROJECT_NAME:-app}-proxy
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - DOMAIN=${DOMAIN:-localhost}
      - STAGING_DOMAIN=${STAGING_DOMAIN:-staging.localhost}
      - PROJECT_NAME=${PROJECT_NAME:-app}
      - PROJECT_DOMAIN=${PROJECT_DOMAIN:-localhost}
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    depends_on:
      - website
      - api
    networks:
      - app_network
    restart: unless-stopped
    volumes:
      - ./ssl:/etc/nginx/ssl:ro

  logging:
    build: ./logging
    container_name: ${PROJECT_NAME:-app}-logging
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - LOKI_PORT=3100
      - PROJECT_NAME=${PROJECT_NAME:-app}
      - PROJECT_DOMAIN=${PROJECT_DOMAIN:-localhost}
    ports:
      - "${LOGGING_PORT:-445}:3100"
    volumes:
      - loki_data:/loki
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 15s

  log-collector:
    image: grafana/promtail:3.0.0
    container_name: ${PROJECT_NAME:-app}-log-collector
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-development}
    volumes:
      - ./logging/promtail/promtail.yml:/etc/promtail/config.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - logging
    networks:
      - app_network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: ${PROJECT_NAME:-app}-grafana
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - PROJECT_NAME=${PROJECT_NAME:-app}
    ports:
      - "${GRAFANA_PORT:-448}:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    networks:
      - app_network
    restart: unless-stopped
    depends_on:
      - logging

  uptime-kuma:
    image: louislam/uptime-kuma:latest
    container_name: ${PROJECT_NAME:-app}-uptime-kuma
    environment:
      - TZ=UTC
    ports:
      - "${KUMA_PORT:-446}:3001"
    volumes:
      - ./devops/data:/app/data
    networks:
      - app_network
    restart: unless-stopped

  dashboard:
    build: ./dashboard
    container_name: ${PROJECT_NAME:-app}-dashboard
    environment:
      - DASHBOARD_PORT=${DASHBOARD_PORT:-447}
      - WEBSITE_PORT=${WEBSITE_PORT:-5000}
      - API_PORT=${API_PORT:-444}
      - HTTP_PORT=${HTTP_PORT:-80}
      - LOGGING_PORT=${LOGGING_PORT:-445}
      - GRAFANA_PORT=${GRAFANA_PORT:-448}
      - KUMA_PORT=${KUMA_PORT:-446}
    ports:
      - "${DASHBOARD_PORT:-447}:447"
    networks:
      - app_network
    restart: unless-stopped

volumes:
  mysql_data:
  loki_data:
  grafana_data:

networks:
  app_network:
    driver: bridge
